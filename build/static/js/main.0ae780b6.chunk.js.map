{"version":3,"sources":["Todo.js","Todolist.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","clearTodo","react_default","a","createElement","className","concat","completed","type","checked","readOnly","onChange","id","name","onClick","Todolist","todos","map","src_Todo","key","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","todoNameRef","useRef","countRemainedTodo","filter","length","Fragment","ref","current","value","prevTodos","uuidv4","toConsumableArray","src_Todolist","newTodos","find","console","log","splice","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"oMA4BeA,SA1BF,SAAHC,GAAwC,IAAlCC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAASH,EAATG,UAQhC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAC,OAAYP,EAAKQ,UAAY,aAAe,KACxDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEI,KAAK,WACLC,QAASV,EAAKQ,UACdG,UAAQ,EACRC,SAdgB,WACtBX,EAAWD,EAAKa,OAeZV,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,YAAOL,EAAKc,QAGhBX,EAAAC,EAAAC,cAAA,KAAGU,QAjBa,WAClBb,EAAUF,EAAKa,KAgBYP,UAAU,cCL1BU,EAfE,SAAHjB,GAAyC,IAAnCkB,EAAKlB,EAALkB,MAAOhB,EAAUF,EAAVE,WAAYC,EAASH,EAATG,UACrC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZW,EAAMC,IAAI,SAAClB,GAAI,OACdG,EAAAC,EAAAC,cAACc,EAAI,CACHnB,KAAMA,EACNoB,IAAKpB,EAAKa,GACVZ,WAAYA,EACZC,UAAWA,gBCoDNmB,EAzDH,WAAM,IAAAC,EACUC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BL,EAAKO,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAcC,mBAoCdC,EAAoBb,EAAMc,OAAO,SAAC/B,GAAI,OAAMA,EAAKQ,YAAWwB,OAElE,OACE7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACE9B,EAAAC,EAAAC,cAAA,UAAI,gCACJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOyB,IAAKN,IACxBzB,EAAAC,EAAAC,cAAA,UAAQU,QAxCQ,WACpB,IAAMD,EAAOc,EAAYO,QAAQC,MACpB,KAATtB,IAEJa,EAAS,SAACU,GACR,OAAQ,CAAExB,GAAIyB,cAAUxB,KAAMA,EAAMN,WAAW,IAAOD,OAAAkB,OAAAc,EAAA,EAAAd,CAAKY,MAE7DT,EAAYO,QAAQC,MAAQ,QAiCQ,yCAElCjC,EAAAC,EAAAC,cAACmC,EAAQ,CAACvB,MAAOA,EAAOhB,WA/BT,SAACY,GAClB,IAAM4B,EAAQhB,OAAAc,EAAA,EAAAd,CAAOR,GACfjB,EAAOyC,EAASC,KAAK,SAAC1C,GAAI,OAAKA,EAAKa,KAAOA,IACjDb,EAAKQ,WAAaR,EAAKQ,UACvBmC,QAAQC,IAAIH,GACZd,EAASc,IA0ByCvC,UAtBlC,SAACW,GACjB,IAAM4B,EAAQhB,OAAAc,EAAA,EAAAd,CAAOR,GACrBwB,EAASI,OAAOhC,EAAI,GACpBc,EAASc,MAoBPtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAG,6CAAQyB,GACX3B,EAAAC,EAAAC,cAAA,UAAQU,QAlBM,SAACF,GACnB,IAAM4B,EAAWxB,EAAMc,OAAO,SAAC/B,GAAI,OAAMA,EAAKQ,YAC9CmB,EAASc,KAgByB,yECpDzBK,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,WAAU,KACfhD,EAAAC,EAAAC,cAAC+C,EAAG","file":"static/js/main.0ae780b6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Todo = ({ todo, toggleTodo, clearTodo }) => {\n  const handleTodoClick = () => {\n    toggleTodo(todo.id);\n  };\n  const handleClear = () => {\n    clearTodo(todo.id);\n  };\n\n  return (\n    <div className={`c-todo ${todo.completed ? \"-completed\" : \"\"}`}>\n      <div className=\"c-radioBtn\">\n        <input\n          type=\"checkbox\"\n          checked={todo.completed}\n          readOnly\n          onChange={handleTodoClick}\n        />\n        <label>\n          <span>{todo.name}</span>\n        </label>\n      </div>\n      <i onClick={handleClear} className=\"icon-X\"></i>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst Todolist = ({ todos, toggleTodo, clearTodo }) => {\n  return (\n    <div className=\"c-todoTist\">\n      {todos.map((todo) => (\n        <Todo\n          todo={todo}\n          key={todo.id}\n          toggleTodo={toggleTodo}\n          clearTodo={clearTodo}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Todolist;\n","import React from \"react\";\nimport \"./App.css\";\nimport { useState, useRef } from \"react\";\nimport Todolist from \"./Todolist\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const todoNameRef = useRef();\n\n  //タスクを追加\n  const handleAddTodo = () => {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n\n    setTodos((prevTodos) => {\n      return [{ id: uuidv4(), name: name, completed: false }, ...prevTodos];\n    });\n    todoNameRef.current.value = null;\n  };\n\n  // チェックのトグル\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    console.log(newTodos);\n    setTodos(newTodos);\n  };\n\n  // todoの削除\n  const clearTodo = (id) => {\n    const newTodos = [...todos];\n    newTodos.splice(id, 1);\n    setTodos(newTodos);\n  };\n\n  // 完了済みタスクをすべて削除\n  const handleClear = (id) => {\n    const newTodos = todos.filter((todo) => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  // 残りのタスクのカウント\n  const countRemainedTodo = todos.filter((todo) => !todo.completed).length;\n\n  return (\n    <>\n      <h1>React Todoアプリ</h1>\n      <div className=\"c-addBlock\">\n        <input type=\"text\" ref={todoNameRef} />\n        <button onClick={handleAddTodo}>タスクを追加</button>\n      </div>\n      <Todolist todos={todos} toggleTodo={toggleTodo} clearTodo={clearTodo} />\n      <div className=\"c-todoFooter\">\n        <p>残りのタスク：{countRemainedTodo}</p>\n        <button onClick={handleClear}>完了タスクをすべて削除</button>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}